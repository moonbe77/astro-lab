---
import type { HTMLAttributes } from "astro/types";

type Links = HTMLAttributes<"a">;

interface Props extends HTMLAttributes<"div"> {
  label: string;
  // items: Links[];
}

const { label, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
// const subpath = pathname.match(/[^\/]+/g);
// const isActive = href === pathname || href === "/" + subpath?.[0];
const isActive = true;
---

<div class="dropdown" class:list={[className, { active: isActive }]} {...props}>
  <div class="label">‚ç±{label}</div>
  <div class="item-wrapper">
    <div class="h-6"></div>
    <slot />
  </div>
</div>
<style>
  .dropdown {
    display: inline-block;
  }

  .dropdown > .label {
    /* font-weight: 700; */
    cursor: pointer;
  }

  .item-wrapper {
    background-color: aliceblue;
    display: flex;
    flex-direction: column;
    position: absolute;
    visibility: hidden;
    width: 300px;
  }

  .dropdown:hover .item-wrapper {
    animation: PopIn 300ms forwards;
    visibility: visible;
  }
  .dropdown:hover > .label {
    font-weight: 700;
  }

  @keyframes PopIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
</style>
